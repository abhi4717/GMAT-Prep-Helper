type <- data.frame(Type=character(0),Date=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
for(dateCount in 1:length(dateList)){
filterData <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
type <- rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], filterData));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Total","Percent");
type;
}
getTypeDateAccuracy <- function(type, date, data){
correctCount <- sum(data$Result == 'Correct');
incorrectCount <- sum(data$Result != 'Correct');
type <- as.data.frame(type);
type <- cbind(type,date);
type <- cbind(type,correctCount);
type <- cbind(type,incorrectCount);
type <- cbind(type,correctCount+incorrectCount);
type <- cbind(type,correctCount/(correctCount+incorrectCount)*100);
type;
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
getTypeList<-function(data){
unique(data$Type);
}
getTypeDateAccuracyFrame('Critical Reasoning');
output.sessionAccuracy <- getSessionAccFrame('Critical Reasoning');
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
View(output.typeDateAccuracy)
input[,1]
input[,3]
input[,5]
getTypeAccuracyFrame <- function(){
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccurracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccurracy, getTypeAccouracy(typeList[typeCount], data));
}
}
getTypeAccuracy <- function(type, data){
correctCount <- sum(data$Result == 'Correct');
incorrectCount <- sum(data$Result != 'Correct');
typeAcc <-  as.data.frame(type);
typeAcc <- cbind(typeAcc, correctCount);
typeAcc <- cbind(typeAcc, incorrectCount);
typeAcc <- cbind(typeAcc, correctCount+incorrectCount);
typeAcc <- cbind(typeAcc, correctCount/typeAcc[1,4]);
typeAcc;
}
getTypeAccuracy('Weaken',output.typeDateAccuracy)
getTypeAccuracyFrame <- function(){
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccurracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccurracy, getTypeAccouracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
}
getTypeAccuracyFrame()
getTypeAccuracyFrame <- function(){
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccurracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccurracy, getTypeAccuracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
}
getTypeAccuracyFrame()
getTypeAccuracyFrame <- function(){
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccurracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccurracy, getTypeAccuracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
colnames(typeAccuracy) <- c('Type','Correct','Incorrect','Total','Percent');
typeAccuracy;
}
getTypeAccuracyFrame()
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccurracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccurracy, getTypeAccuracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
typeAccuracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccurracy, getTypeAccuracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccuracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccuracy, getTypeAccuracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
View(typeAccuracy)
View(output.typeDateAccuracy)
getTypeAccuracy('Weakens',output.typeDateAccuracy[output.typeDateAccuracy$Type=='Weakens',])
getTypeAccuracy
output.typeDateAccuracy[output.typeDateAccuracy$Type=='Weakens',]
getTypeAccuracy('Weakens',output.typeDateAccuracy[output.typeDateAccuracy$Type=='Weakens',])
getTypeAccuracy <- function(type, data){
correctCount <- sum(data$Correct);
incorrectCount <- sum(data$Incorrect);
total <- sum(data$Total);
percent <- correctCount/total*100;
typeAcc <-  as.data.frame(type);
typeAcc <- cbind(typeAcc, correctCount);
typeAcc <- cbind(typeAcc, incorrectCount);
typeAcc <- cbind(typeAcc, total);
typeAcc <- cbind(typeAcc, percent);
typeAcc;
}
getTypeAccuracy('Weakens',output.typeDateAccuracy[output.typeDateAccuracy$Type=='Weakens',])
getTypeAccuracy('Weaken',output.typeDateAccuracy[output.typeDateAccuracy$Type=='Weaken',])
getTypeAccuracy('Strengthen',output.typeDateAccuracy[output.typeDateAccuracy$Type=='Strengthen',])
getTypeAccuracyFrame <- function(){
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccuracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccuracy, getTypeAccuracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
colnames(typeAccuracy) <- c('Type','Correct','Incorrect','Total','Percent');
typeAccuracy;
}
getTypeAccuracyFrame()
#input <- read.csv('/home/abhishek/Documents/Git Repositories/GMAT-Prep-Helper/src/r/EvaluateScoring/resources/Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
input <- read.csv('C:\\Users\\abgopalan\\Documents\\GitHub\\GMAT-Prep-Helper\\src\\r\\EvaluateScoring\\resources\\Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
output.sessionAccuracy <- getSessionAccFrame('Critical Reasoning');
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
getSessionAccFrame <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(section,data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
colnames(frmSessionAcc) <- c("Section","Date","Correct","Incorrect","Total","Percent")
frmSessionAcc;
}
accuracyInfo <- function(section,data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Date=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
for(dateCount in 1:length(dateList)){
filterData <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
type <- rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], filterData));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Total","Percent");
type;
}
getTypeDateAccuracy <- function(type, date, data){
correctCount <- sum(data$Result == 'Correct');
incorrectCount <- sum(data$Result != 'Correct');
type <- as.data.frame(type);
type <- cbind(type,date);
type <- cbind(type,correctCount);
type <- cbind(type,incorrectCount);
type <- cbind(type,correctCount+incorrectCount);
type <- cbind(type,correctCount/(correctCount+incorrectCount)*100);
type;
}
getTypeAccuracyFrame <- function(){
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccuracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccuracy, getTypeAccuracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
colnames(typeAccuracy) <- c('Type','Correct','Incorrect','Total','Percent');
typeAccuracy;
}
getTypeAccuracy <- function(type, data){
correctCount <- sum(data$Correct);
incorrectCount <- sum(data$Incorrect);
total <- sum(data$Total);
percent <- correctCount/total*100;
typeAcc <-  as.data.frame(type);
typeAcc <- cbind(typeAcc, correctCount);
typeAcc <- cbind(typeAcc, incorrectCount);
typeAcc <- cbind(typeAcc, total);
typeAcc <- cbind(typeAcc, percent);
typeAcc;
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
getTypeList<-function(data){
unique(data$Type);
}
output.sessionAccuracy <- getSessionAccFrame('Critical Reasoning');
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
output.overallTypeAccuracy <- getTypeAccuracyFrame();
input <- read.csv('C:\\Users\\abgopalan\\Documents\\GitHub\\GMAT-Prep-Helper\\src\\r\\EvaluateScoring\\resources\\Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
getSessionAccFrame <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(section,data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
colnames(frmSessionAcc) <- c("Section","Date","Correct","Incorrect","Total","Percent")
frmSessionAcc;
}
accuracyInfo <- function(section,data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Date=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
for(dateCount in 1:length(dateList)){
filterData <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
type <- rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], filterData));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Total","Percent");
type;
}
getTypeDateAccuracy <- function(type, date, data){
correctCount <- sum(data$Result == 'Correct');
incorrectCount <- sum(data$Result != 'Correct');
type <- as.data.frame(type);
type <- cbind(type,date);
type <- cbind(type,correctCount);
type <- cbind(type,incorrectCount);
type <- cbind(type,correctCount+incorrectCount);
type <- cbind(type,correctCount/(correctCount+incorrectCount)*100);
type;
}
getTypeAccuracyFrame <- function(){
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccuracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccuracy, getTypeAccuracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
colnames(typeAccuracy) <- c('Type','Correct','Incorrect','Total','Percent');
typeAccuracy;
}
getTypeAccuracy <- function(type, data){
correctCount <- sum(data$Correct);
incorrectCount <- sum(data$Incorrect);
total <- sum(data$Total);
percent <- correctCount/total*100;
typeAcc <-  as.data.frame(type);
typeAcc <- cbind(typeAcc, correctCount);
typeAcc <- cbind(typeAcc, incorrectCount);
typeAcc <- cbind(typeAcc, total);
typeAcc <- cbind(typeAcc, percent);
typeAcc;
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
getTypeList<-function(data){
unique(data$Type);
}
output.sessionAccuracy <- getSessionAccFrame('Critical Reasoning');
output.overallTypeAccuracy <- getTypeAccuracyFrame();
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
output.overallTypeAccuracy <- getTypeAccuracyFrame();
View(output.overallTypeAccuracy)
y <- c(1:5)
x<- c(1:5)
barplot(y,x)
barplot(y)
input <- read.csv('C:\\Users\\abgopalan\\Documents\\GitHub\\GMAT-Prep-Helper\\src\\r\\EvaluateScoring\\resources\\Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
getSessionAccFrame <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(section,data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
colnames(frmSessionAcc) <- c("Section","Date","Correct","Incorrect","Total","Percent")
frmSessionAcc;
}
accuracyInfo <- function(section,data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Date=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
for(dateCount in 1:length(dateList)){
filterData <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
type <- rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], filterData));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Total","Percent");
type;
}
getTypeDateAccuracy <- function(type, date, data){
correctCount <- sum(data$Result == 'Correct');
incorrectCount <- sum(data$Result != 'Correct');
type <- as.data.frame(type);
type <- cbind(type,date);
type <- cbind(type,correctCount);
type <- cbind(type,incorrectCount);
type <- cbind(type,correctCount+incorrectCount);
type <- cbind(type,correctCount/(correctCount+incorrectCount)*100);
type;
}
getTypeAccuracyFrame <- function(){
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccuracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccuracy, getTypeAccuracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
colnames(typeAccuracy) <- c('Type','Correct','Incorrect','Total','Percent');
typeAccuracy;
}
getTypeAccuracy <- function(type, data){
correctCount <- sum(data$Correct);
incorrectCount <- sum(data$Incorrect);
total <- sum(data$Total);
percent <- correctCount/total*100;
typeAcc <-  as.data.frame(type);
typeAcc <- cbind(typeAcc, correctCount);
typeAcc <- cbind(typeAcc, incorrectCount);
typeAcc <- cbind(typeAcc, total);
typeAcc <- cbind(typeAcc, percent);
typeAcc;
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
getTypeList<-function(data){
unique(data$Type);
}
output.sessionAccuracy <- getSessionAccFrame('Critical Reasoning');
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
output.overallTypeAccuracy <- getTypeAccuracyFrame();
View(output.overallTypeAccuracy)
View(output.sessionAccuracy)
barplot(output.overallTypeAccuracy$Percent,width=1)
barplot(output.overallTypeAccuracy$Percent,width=0.5)
barplot(output.overallTypeAccuracy$Percent,width=2)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=overallTypeAccuracy$Type)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=)
overallTypeAccuracy$Type
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=FALSE)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=FALSE)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=FALSE,axes=FALSE)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=FALSE,axes=TRUE)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,angle=45)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=1)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=FALSE,axes=TRUE,las=1)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=0)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=3)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=2)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=3,col='blue')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=3,col='light blue')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=3,col='red')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=3,col='light red')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=3,col='pink')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=3,col='light blue')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=1,col='light blue')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=1,col='light blue')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=FALSE,axes=TRUE,las=1,col='light blue')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=FALSE,axes=TRUE,las=2,col='light blue')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=FALSE,axes=TRUE,las=2,col='light blue')
input <- read.csv('C:\\Users\\abgopalan\\Documents\\GitHub\\GMAT-Prep-Helper\\src\\r\\EvaluateScoring\\resources\\Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
getSessionAccFrame <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(section,data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
colnames(frmSessionAcc) <- c("Section","Date","Correct","Incorrect","Total","Percent")
frmSessionAcc;
}
accuracyInfo <- function(section,data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Date=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
for(dateCount in 1:length(dateList)){
filterData <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
type <- rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], filterData));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Total","Percent");
type;
}
getTypeDateAccuracy <- function(type, date, data){
correctCount <- sum(data$Result == 'Correct');
incorrectCount <- sum(data$Result != 'Correct');
type <- as.data.frame(type);
type <- cbind(type,date);
type <- cbind(type,correctCount);
type <- cbind(type,incorrectCount);
type <- cbind(type,correctCount+incorrectCount);
type <- cbind(type,correctCount/(correctCount+incorrectCount)*100);
type;
}
getTypeAccuracyFrame <- function(){
data <- output.typeDateAccuracy;
typeList <- getTypeList(data);
typeAccuracy <- data.frame(Type = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(typeCount in 1:length(typeList)){
typeAccuracy <- rbind(typeAccuracy, getTypeAccuracy(typeList[typeCount], data[data$Type == typeList[typeCount],]));
}
colnames(typeAccuracy) <- c('Type','Correct','Incorrect','Total','Percent');
typeAccuracy;
}
getTypeAccuracy <- function(type, data){
correctCount <- sum(data$Correct);
incorrectCount <- sum(data$Incorrect);
total <- sum(data$Total);
percent <- correctCount/total*100;
typeAcc <-  as.data.frame(type);
typeAcc <- cbind(typeAcc, correctCount);
typeAcc <- cbind(typeAcc, incorrectCount);
typeAcc <- cbind(typeAcc, total);
typeAcc <- cbind(typeAcc, percent);
typeAcc;
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
getTypeList<-function(data){
unique(data$Type);
}
output.sessionAccuracy <- getSessionAccFrame('Critical Reasoning');
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
output.overallTypeAccuracy <- getTypeAccuracyFrame();
getSessionAccFrame <- function(section){
output.sessionAccuracy <- getSessionAccFrame('Critical Reasoning');
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
output.overallTypeAccuracy <- getTypeAccuracyFrame();
}
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=FALSE,axes=TRUE,las=2,col='light blue')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=2,col='light blue')
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=2,col='light blue',mai=c(10,10,10,10)+0.1)
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=2,col='light blue')
par(mar=c(5,8,4,2))
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=2,col='light blue')
par(mar=c(5,10,4,2))
barplot(output.overallTypeAccuracy$Percent,width=2,names.arg=output.overallTypeAccuracy$Type,horiz=TRUE,axes=TRUE,las=2,col='light blue')
