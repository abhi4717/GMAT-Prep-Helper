incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
colnames(session) <- c("Session","Correct","Incorrect","Total");
session;
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
sessionAccInfo <- function(section){
data <- input[input$Section==section,];
dateList <- unique(input$Date);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(accuracyInfo(data[data$Date==dateList[dateCount],]));
}
frmSessionAcc;
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
View(output.sessionAccuracy)
sessionAccInfo <- function(section){
data <- input[input$Section==section,];
dateList <- unique(input$Date);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
frmSessionAcc;
}
accuracyInfo <- function(data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
colnames(session) <- c("Session","Date","Correct","Incorrect","Total");
session;
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
View(output.sessionAccuracy)
View(input)
input[input$Section==section,]
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data);
}
input <- read.csv('/home/abhishek/Documents/Git Repositories/GMAT-Prep-Helper/src/r/EvaluateScoring/resources/Evaluate.csv',header=TRUE,sep=","strip.white=TRUE);
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
sessionAccInfo <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
frmSessionAcc;
}
accuracyInfo <- function(data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session;
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data);
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
unique(data$Date)
getDateList<-function(data){
unique(data$Date);
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
View(output.sessionAccuracy)
input <- read.csv('/home/abhishek/Documents/Git Repositories/GMAT-Prep-Helper/src/r/EvaluateScoring/resources/Evaluate.csv',header=TRUE,sep=","strip.white=TRUE);
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
sessionAccInfo <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
colnames(frmSessionAcc) <- c("Section","Date","Correct","Incorrect","Total")
frmSessionAcc;
}
accuracyInfo <- function(data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session;
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
View(output.sessionAccuracy)
input <- read.csv('/home/abhishek/Documents/Git Repositories/GMAT-Prep-Helper/src/r/EvaluateScoring/resources/Evaluate.csv',header=TRUE,sep=","strip.white=TRUE);
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
sessionAccInfo <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
colnames(frmSessionAcc) <- c("Section","Date","Correct","Incorrect","Total","Percent")
frmSessionAcc;
}
accuracyInfo <- function(data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
View(output.sessionAccuracy)
unique(data$Type);
input <- read.csv('/home/abhishek/Documents/Git Repositories/GMAT-Prep-Helper/src/r/EvaluateScoring/resources/Evaluate.csv',header=TRUE,sep=","strip.white=TRUE);
sessionAccInfo <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
colnames(frmSessionAcc) <- c("Section","Date","Correct","Incorrect","Total","Percent")
frmSessionAcc;
}
accuracyInfo <- function(data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
typeAccuracyInfo <- function(section){
data <- getSectionData(section);
typeList <- getTypeList();
for(typeCount in 1:length(typeList)){
}
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
getTypeList<-function(data){
unique(data$Type);
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
input <- read.csv('/home/abhishek/Documents/Git Repositories/GMAT-Prep-Helper/src/r/EvaluateScoring/resources/Evaluate.csv',header=TRUE,sep=","strip.white=TRUE);
input <- read.csv('/home/abhishek/Documents/Git Repositories/GMAT-Prep-Helper/src/r/EvaluateScoring/resources/Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
input <- read.csv('C:\Users\abgopalan\Documents\GitHub\GMAT-Prep-Helper\src\r\EvaluateScoring\resources\Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
input <- read.csv('C:\\Users\\abgopalan\\Documents\\GitHub\\GMAT-Prep-Helper\\src\\r\\EvaluateScoring\\resources\\Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
data.frame()
accuracyInfo <- function(data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- data.frame();
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
accuracyInfo <- function(data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(Section=character(0));
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
accuracyInfo <- function(data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- data.frame(Section=character(0));
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
sessionAccInfo <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(section,data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
colnames(frmSessionAcc) <- c("Section","Date","Correct","Incorrect","Total","Percent")
frmSessionAcc;
}
accuracyInfo <- function(section,data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
typeAccuracyInfo <- function(section){
data <- getSectionData(section);
typeList <- getTypeList();
for(typeCount in 1:length(typeList)){
}
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
getTypeList<-function(data){
unique(data$Type);
}
output.sessionAccuracy <- sessionAccInfo('Critical Reasoning');
View(output.sessionAccuracy)
data[data$Type=='Weaken'&&data$Date=='22/10/2013,];
x
xa
data[data$Type==typeList[typeCount]&&data$Date==dateList[dateCount],];
''
''
data[data$Type=='Weaken'&&data$Date=='22/10/2013',];
input[input$Type=='Weaken']
View(input)
input$Type
input$Type=='Weaken'
input$Type=='Weaken'&&input$Date=='21/10/13'
input$Type=='Evaluate'&&input$Date=='21/10/13'
input$Type=='Evaluate'&&input$Date=='21/10/13'
input$Type=='Evaluate'
input$Type=='Evaluate' && input$Date == '21/10/13'
input[input$Type=='Evaluate' && input$Date == '21/10/13',]
input[input$Type=='Evaluate' & input$Date == '21/10/13',]
getSessionAccFrame <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(section,data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
colnames(frmSessionAcc) <- c("Section","Date","Correct","Incorrect","Total","Percent")
frmSessionAcc;
}
accuracyInfo <- function(section,data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList)){
for(typeCount in 1:length(typeList)){
filterDate <- data[data$Type==typeList[typeCount]&data$Date==dateList[dateCount],];
rbind(type,getTypeAccuracy(typeList[typeCount], dateList[dateCount], data));
}
}
colname(type) <- c("Type","Date","Correct","Incorrect","Percent");
type;
}
getTypeDateAccuracy <- function(type, date, data){
correctCount <- sum(data$Result == 'Correct');
incorrectCount <- sum(data$Result != 'Correct');
type <- as.data.frame(type);
type <- cbind(type,date);
type <- cbind(type,correctCount);
type <- cbind(type,incorrectCount);
type <- cbind(type,correctCount+incorrectCount);
type <- cbind(type,correctCount/(correctCount+incorrectCount)*100);
type;
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
getTypeList<-function(data){
unique(data$Type);
}
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList)){
for(typeCount in 1:length(typeList)){
filterDate <- data[data$Type==typeList[typeCount]&data$Date==dateList[dateCount],];
rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], data));
}
}
colname(type) <- c("Type","Date","Correct","Incorrect","Percent");
type;
}
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList)){
for(typeCount in 1:length(typeList)){
filterDate <- data[data$Type==typeList[typeCount]&data$Date==dateList[dateCount],];
rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], data));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Percent");
type;
}
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
View(output.typeDateAccuracy)
getTypeDateAccuracyFrame('Critical Reasoning')
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList)){
for(typeCount in 1:length(typeList)){
filterDate <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], data));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Total","Percent");
type;
}
getTypeDateAccuracyFrame('Critical Reasoning')
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Date=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList)){
for(typeCount in 1:length(typeList)){
filterDate <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], data));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Total","Percent");
type;
}
getTypeDateAccuracyFrame('Critical Reasoning')
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Date=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList)){
for(typeCount in 1:length(typeList)){
filterData <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], filterData));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Total","Percent");
type;
}
getTypeDateAccuracyFrame('Critical Reasoning')
data <- getSectionData(section);
section <- 'Critical Reasoning'
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Date=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
dateCount = '21/10/13'
dateCount = 1
typeCount = 1
filterData <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], filterData));
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Date=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList)){
for(typeCount in 1:length(typeList)){
filterData <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], filterData));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Total","Percent");
type;
}
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
View(output.typeDateAccuracy)
View(type)
View(output.typeDateAccuracy)
View(type)
input <- read.csv('C:\\Users\\abgopalan\\Documents\\GitHub\\GMAT-Prep-Helper\\src\\r\\EvaluateScoring\\resources\Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
getSessionAccFrame <- function(section){
data <- getSectionData(section);
dateList <- getDateList(data);
frmSessionAcc <- data.frame(Section = character(0), Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList) ){
frmSessionAcc <- rbind(frmSessionAcc,accuracyInfo(section,data[data$Date==dateList[dateCount],],dateList[dateCount]));
}
colnames(frmSessionAcc) <- c("Section","Date","Correct","Incorrect","Total","Percent")
frmSessionAcc;
}
accuracyInfo <- function(section,data,date){
correctCount <- sum(data$Result=='Correct');
incorrectCount <-sum(data$Result != 'Correct');
session <- as.data.frame(section);
session <- cbind(session,date);
session <- cbind(session,correctCount);
session <- cbind(session,incorrectCount);
session <- cbind(session,correctCount+incorrectCount);
session <- cbind(session,correctCount/(correctCount+incorrectCount)*100);
session;
}
getTypeDateAccuracyFrame <- function(section){
data <- getSectionData(section);
typeList <- getTypeList(data);
dateList <- getDateList(data);
type <- data.frame(Type=character(0),Date=character(0),Correct = numeric(0), Incorrect = numeric(0), Total = numeric(0), Percent = numeric(0));
for(dateCount in 1:length(dateList)){
for(typeCount in 1:length(typeList)){
filterData <- data[data$Type==typeList[typeCount] & data$Date==dateList[dateCount],];
rbind(type,getTypeDateAccuracy(typeList[typeCount], dateList[dateCount], filterData));
}
}
colnames(type) <- c("Type","Date","Correct","Incorrect","Total","Percent");
type;
}
getTypeDateAccuracy <- function(type, date, data){
correctCount <- sum(data$Result == 'Correct');
incorrectCount <- sum(data$Result != 'Correct');
type <- as.data.frame(type);
type <- cbind(type,date);
type <- cbind(type,correctCount);
type <- cbind(type,incorrectCount);
type <- cbind(type,correctCount+incorrectCount);
type <- cbind(type,correctCount/(correctCount+incorrectCount)*100);
type;
}
getSectionData<-function(section){
input[input$Section==section,];
}
getDateList<-function(data){
unique(data$Date);
}
getTypeList<-function(data){
unique(data$Type);
}
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
input <- read.csv('C:\\Users\\abgopalan\\Documents\\GitHub\\GMAT-Prep-Helper\\src\\r\\EvaluateScoring\\resources\Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
input <- read.csv('C:\\Users\\abgopalan\\Documents\\GitHub\\GMAT-Prep-Helper\\src\\r\\EvaluateScoring\\resources\\Evaluate.csv',header=TRUE,sep=",",strip.white=TRUE);
output.typeDateAccuracy <- getTypeDateAccuracyFrame('Critical Reasoning');
View(output.typeDateAccuracy)
debug(getTypeDateAccuracyFrame)
getTypeDateAccuracyFrame('Critical Reasoning')
typeList
type
typeCount
